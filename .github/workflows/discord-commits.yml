name: Post commits to Discord

on:
  push:
    branches:
      - "**"

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history for diffs)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build commit summary
        id: summary
        run: |
          # Basic context
          REPO="${{ github.repository }}"
          BRANCH="${{ github.ref_name }}"
          ACTOR="${{ github.actor }}"
          BEFORE="${{ github.event.before }}"
          AFTER="${{ github.sha }}"

          # List commits in this push
          COMMITS=$(jq -r '.commits[] | "- \(.id[0:7]) \(.message | gsub("\n"; " ")) by \(.author.username // .author.name)"' "$GITHUB_EVENT_PATH")

          # List changed files across the push range
          git fetch --no-tags --prune --depth=0
          CHANGES=$(git diff --name-status "$BEFORE" "$AFTER" | head -n 50)

          # Cap lengths to keep Discord happy (~2000 char limit for content)
          truncate() { awk -v max="$1" '{buf=buf $0 ORS} END{ if (length(buf)>max) print substr(buf,1,max-20) "...(truncated)"; else print buf }'; }

          TITLE="ðŸ“¦ ${REPO} â†’ ${BRANCH}"
          BODY=$(cat <<EOF
Pushed by **${ACTOR}**

**Commits**
${COMMITS}

**Changed files**
\`\`\`
${CHANGES}
\`\`\`

<https://github.com/${REPO}/compare/${BEFORE}...${AFTER}>
EOF
)

          SAFE_BODY=$(printf "%s" "$BODY" | truncate 1800)

          # Write JSON payload to a file (use jq for safe escaping)
          jq -n --arg content "$TITLE\n\n$SAFE_BODY" '{content:$content}' > payload.json

      - name: Send to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -sS -H "Content-Type: application/json" \
            -d @payload.json \
            "$DISCORD_WEBHOOK_URL"
